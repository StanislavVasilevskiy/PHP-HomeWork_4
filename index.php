<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>PHP HomeWork 4</title>
	<style>
		body {
			padding-left: 10px;
		}
	</style>
</head>
<body>

<?php

//Task 1
/* Дана любая строка, например, 'minsk'. Сделайте из нее строку 'MINSK' —
все буквы должны быть большими. */

echo "Task 1:" . "<br />";
	$string1 = "minsk";
	echo strtoupper($string1);
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 2
/* В переменной $date лежит дата в формате '31-12-2030'. Преобразуйте эту
дату в формат '2030.12.31'. */

echo "Task 2:" . "<br />";
	$date = "31-12-2030";
	$arr_date = explode("-", $date);
	echo $arr_date[2] . "." . $arr_date[1] . "." . $arr_date[0];
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 3
/* Дана строка 'london is the capital of great britain'. Сделайте из нее
строку 'London Is The Capital Of Great Britain'. */

echo "Task 3:" . "<br />";
	$string2 = "london is the capital of great britain";
	echo ucwords($string2);
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 4
/* Возведите 2 в 10 степень. Результат запишите в переменную $st. */

echo "Task 4:" . "<br />";
	$st = 2 ** 10;
	echo $st;
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 5
/* Дана строка 'abc abc abc'. Определите позицию первой буквы 'b'. */

echo "Task 5:" . "<br />";
	$string3 = "abc abc abc";
	echo strpos($string3, "b");
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 6
/* Дана строка 'abc abc abc'. Определите позицию первой найденной буквы 'b',
если начать поиск не с начала строки, а с позиции 3. */

echo "Task 6:" . "<br />";
	$str4 = "abc abc abc";
	echo strpos($str4, "b", 3);
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 7
/* Дана строка 'html css php'. С помощью функции explode запишите каждое
слово этой строки в отдельный элемент массива. */

echo "Task 7:" . "<br />";
	$str4 = "html css php";
	echo "<pre>" . print_r(explode(" ", $str4), true) . "</pre>";
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 8
/* Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56',
'78', '90'. */

echo "Task 8:" . "<br />";
	$str5 = "1234567890";
	echo "<pre>" . print_r(str_split($str5, 2), true) . "</pre>";
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 9
/* Дана строка. Перемешайте символы этой строки в случайном порядке. */

echo "Task 9:" . "<br />";
	$str6 = "0123456789";
	echo str_shuffle($str6);
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 10
/* Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки. */

echo "Task 10:" . "<br />";
	$str7 = "html, <b>php</b>, js";
	echo strip_tags($str7);
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 11
/* Выведите 23 сентября 2031 года, 12:58:59 в формате timestamp. */

echo "Task 11:" . "<br />";
	echo date("d.m.Y G:i:s", strtotime("23 september 2031, 12:59:59"));
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 12
/* Выведите текущую дату-время в формате '2025.12.31 12:59:59'. */

echo "Task 12:" . "<br />";
	date_default_timezone_set("Europe/Minsk");
	echo date("G:i:s d.m.Y");
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 13
/* Узнайте, какой день недели (словом) был 1 сентября 2010 года. */

echo "Task 13:" . "<br />";
	$a = date("w", mktime(0, 0, 0, 9, 1, 2010));
	$b = ["Воскресенье", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"];
	echo $b[$a];
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 14
/* Найдите количество дней в текущем месяце. Скрипт должен работать
независимо от месяца, в котором он запущен. */

echo "Task 14:" . "<br />";
	echo date("t", time());
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 15
/* Выведите текущую дату-время в форматах
'2025-12-31', '31.12.2025', '31.12.13', '12:59:59'. */

echo "Task 15:" . "<br />";
	echo date("Y-m-d / d.m.Y / d.m.y / H:i:s");
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 16
/* В переменной $date лежит дата в формате '2025-12-31'. Прибавьте к этой
дате 2 дня, 1 месяц и 3 дня, 1 год. Отнимите от этой даты 3 дня. */

echo "Task 16:" . "<br />";
	$date = date("Y-m-d", strtotime("+2 days"));
	echo $date;
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 17
/* Дана переменная $password, в которой хранится пароль пользователя.
Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите
пользователю сообщение о том, что пароль подходит, иначе сообщение о
том, что нужно придумать другой пароль. */

echo "Task 17:" . "<br />";
	$password = "123";

	if (strlen($password) >= 5 && strlen($password) <= 10) echo "Пароль подходит";
	else echo "Пароль не подходит";
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 18
/* Дана строка с буквами и цифрами, например, '1a2b3c4b5d6e7f8g9h0'.
Удалите из нее все цифры. То есть в нашем случае должна получится строка
'abcbdefgh'. */

echo "Task 18:" . "<br />";
	$str18 = "1a2b3c4b5d6e7f8g9h0";
	$str18_1 = "";

	for ($i = 0; $i < strlen($str18); $i++) {
		if (!is_numeric($str18[$i])) {
			$str18_1[$i] = $str18[$i];
			echo $str18_1[$i];
		} else continue;
	}
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 19
/* Найдите квадратный корень из 245. */

echo "Task 19:" . "<br />";
	echo sqrt(245);
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 20
/* Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное
число. */

echo "Task 20:" . "<br />";
	echo max(4, -2, 5, 19, -130, 0, 10) . "<br />";
	echo min(4, -2, 5, 19, -130, 0, 10);
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 21
/* Выведите на экран случайное число от 1 до 100. */

echo "Task 21:" . "<br />";
	echo mt_rand(1, 100);
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 22
/* Дан массив с элементами 'Привет, ', 'мир' и '!'. Необходимо записать в
переменную $text фразу 'Привет, мир!', а затем вывести на экран содержимое
этой переменной. */

echo "Task 22:" . "<br />";
	$arr = ["Привет", ",", " мир", "!"];
	$text = implode("", $arr);

	echo $text;
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 23
/* Создайте массив из чисел любого типа $arr. Найдите сумму элементов
этого массива. */

echo "Task 23:" . "<br />";
	$arr = [1, 42, 61, 326, 7, 43, 2];
	$sum = 0;

	foreach ($arr as $value) {
		$sum += $value;
	}

	echo $sum;
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 24
/* Дан многомерный массив:
$arr = ['ru'=> ['голубой', 'красный', 'зеленый'], 'en'=> ['blue', 'red', 'green'],];
Выведите с его помощью слово 'голубой'. */

echo "Task 24:" . "<br />";
	$arr = [ "ru"=> ["голубой", "красный", "зеленый"], "en"=> ["blue", "red", "green"], ];

	echo $arr["ru"][0];
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 25
/* Создайте массив $arr с элементами 2, 5, 3, 9. Умножьте первый элемент
массива на второй, а третий элемент на четвертый. Результаты сложите,
присвойте переменной $result. Выведите на экран значение этой переменной. */

echo "Task 25:" . "<br />";
	$arr = [2, 5, 3, 9];
	$result =  $arr[0] * $arr[1] + $arr[2] * $arr[3];

	echo $result;
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 26
/* Создайте ассоциативный массив дней недели. Ключами в нем должны
служить номера дней от начала недели (понедельник - должен иметь ключ 1,
вторник - 2 и т.д.). Выведите на экран текущий день недели. */

	echo "Task 26:" . "<br />";
	$arr = [
		1 => "Понедельник",
		2 => "Вторник",
		3 => "Среда",
		4 => "Четверг",
		5 => "Пятница",
		6 => "Суббота",
		7 => "Воскресенье",
	];

	echo $arr[date("N")];
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 27
/* Заполните массив 30-ю случайными числами от 1 до 10. */

echo "Task 27:" . "<br />";
	for ($i = 0; $i <= 30; $i++) {
		$arr[$i] = rand(1, 10);
	}

	echo "<pre>" . print_r($arr, true) . "</pre>";
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 28
/* Дан массив в числами, к примеру [1, 2, -1, -2, 3, -3]. Создайте из него
новый массив так, чтобы отрицательные числа стали положительными, а
положительные - отрицательными, то есть у нас должен получиться такой
массив: [-1, -2, 1, 2, -3, 3]. */

echo "Task 28:" . "<br />";
	$arr = [1, 2, -1, -2, 3, -3];

	for ($i = 0; $i < count($arr); $i++) {
		$arr[$i] = -$arr[$i];
	}

	echo "<pre>" . print_r($arr, true) . "</pre>";
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 29
/* Дан массив [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Узнайте, сколько первых элементов
массива нужно сложить, чтобы сумма получилась больше 10. */

echo "Task 29:" . "<br />";
	$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
	$sum = 0;
	$i = 0;

	foreach ($arr as $value) {
		$sum += $value;
		$i++;
		if ($sum > 10) break;
	}

	echo $i;
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 30
/* Дан двухмерный массив с числами, например [[1, 2, 3], [4, 5], [6]].
Найдите сумму элементов этого массива. Массив, конечно же, может быть
произвольным. */

echo "Task 30:" . "<br />";
	$arr30 = [[1, 2, 3], [4, 5], [6]];
	$sum = 0;

	for ($i = 0; $i < count($arr30); $i++) {

		if (is_array($arr30[$i])) {
			for ($j = 0; $j < count($arr30[$i]); $j++) {
					$sum += $arr30[$i][$j];
			}
		} else {
			$sum += $arr30[$i];
		}
	}

	echo $sum;
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 32
/* Используя ассоциативный массив, добавить на страницу навигационное
меню вида:
<ul>
	<li><a href="index.php">Home</a></li>
	<li><a href="about.php">About</a></li>
	<li><a href="services.php">Services</a></li>
	<li><a href="catalog.php">Catalog</a></li>
	<li><a href="contacts.php">Contacts</a></li>
</ul>
Заполните массив соблюдая сл. условия: название индексов являются именем
файла (без расширения), на который ссылается меню; значения массива явл.
названиями пунктов меню. */

echo "Task 32:" . "<br />";
	$arr32 = [
		"index" => "Home",
		"about" => "About",
		"services" => "Services",
		"catalog" => "Catalog",
		"contacts" => "Contacts"
	];

	echo "<ul>";
		foreach ($arr32 as $k => $v) {
			echo "<li><a href=\"".$k.".php\">".$v."</a></li>";
		}
	echo "</ul>";
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 33 !квадраты вылезают из размеров блока!
/* Вывести на черном фоне n красных квадратов случайного размера в
случайной позиции в браузере. */

echo "Task 33:" . "<br />";
	echo "<div style=\"background-color: #000; width: 100%; height: 300px; position: relative;\">";
		function squares($count) {
			for($i = 1; $i <= $count; $i++) {
				$size = rand(50, 200);
				
				echo "<div style=\"width: " . $size . "px; height: " . $size . "px; background-color: #c00; margin: 5px; position: absolute; top:" . rand(1,100) . "%; left:" . rand(1,100) . "%;\"></div>";
			}
		}
		// squares(10);
	echo "</div>";
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 35
/* Найдите сумму элементов массива между двумя нулями (первым и
последним нулями в массиве). Если двух нулей нет в массиве, то выведите
ноль. В массиве может быть более 2х нулей. Пример массива:
[48,9,0,4,21,2,1,0,8,84,76,8,4,13,2] или [1,8,0,13,76,8,7,0,22,0,2,3,2] */

echo "Task 35:" . "<br />";
	$arr35 = [48, 9, 0, 4, 21, 2, 1, 0, 8, 84, 76, 8, 4, 13, 2];
	$arr35 = implode(",", $arr35);
	$find1 = strpos($arr35, "0");
	$find2 = strrpos($arr35, "0");
	$res = $find2 - $find1;
	$result35 = 0;
	$arr35_1 = substr($arr35, $find1 + 2, $res - 3);
	$arr35_1 = explode(",", $arr35_1);

	for ($i = 0; $i < count($arr35_1); $i++) {
		$result35 += $arr35_1[$i];
		
	}

	echo $result35;
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 36
/* Сделайте функцию, которая будет генерировать случайный цвет в hex
(dechex) формате (типа #ffffff). */

echo "Task 36:" . "<br />";
	$arr36 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, "a", "b", "c", "d", "e", "f"];
	$result36 = 0;

	for($i = 0; $i < 5; $i++) {
		$result36 .= $arr36[rand(0, (count($arr36) - 1))];
	}

	$result36 = "#".$result36;

	echo "<div style=\"width:250px; height:250px; margin:25px; background-color:".$result36.";\"></div>";
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 37
/* Дана строка 'aa aba abba abbba abca abea'. Напишите регулярное
выражение, которое найдет строки aba, abba, abbba по шаблону: буква 'a',
буква 'b' любое количество раз, буква 'a'. */

echo "Task 37:" . "<br />";
	$regexp = "/ab+a/";
	$str37 = "aa aba abba abbba abca abea";
	$result37 = preg_match_all($regexp, $str37, $found);

	echo "<pre>"; print_r($found); echo "</pre>";
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 38
/* Дана строка '332 441 550'. Найдите все места, где есть два одинаковых
идущих подряд цифры и замените их на '!'. */

echo "Task 38:" . "<br />";
	$str38 = "332 441 550";
	$regexp38 = "/([0-9]{2})/";
	$result38 = preg_replace($regexp38, "!", $str38);

	echo $result38;
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 39
/* Дана строка 'aaa@bbb eee7@kkk'. Напишите регулярку, которая найдет
строки по шаблону: любое количество букв и цифр, символ @, любое
количество букв и цифр и поменяет местами то, что стоит до @ на то, что
стоит после нее. Например, aaa@bbb должно превратиться в bbb@aaa. */

echo "Task 39:" . "<br />";
	$str39 = "aaa@bbb eee7@kkk";
	$regexp39 = "/([a-zA-Z0-9]+)@([a-zA-Z0-9]+)/";

	echo preg_replace($regexp39, "$2@$1", $str39);
echo "<hr />" . "<br />";

//-------------------------------------------

//Task 40
/* Напишите ф-цию строгой проверки ввода номер телефона в
международном формате (<код страны> <код города или сети> <номер
телефона>) и упрощенной проверки ввода простого номера с кодом и без
него. Функция должна возвращать true или false. */

echo "Task 40:" . "<br />";
	function checkPhone($phone) {
		$reg = "/^\+?375 ?[0-9]{2} ?\d[\d-]+\d$/";

		return preg_match($reg, $phone, $matches) ? true : false;
	}

	var_dump(checkPhone("+375 29 8069891"));
echo "<hr />" . "<br />";

//-------------------------------------------

?>

</body>
</html>